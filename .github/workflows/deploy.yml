name: Sphinx Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # https://github.com/marketplace/actions/setup-python
      # ^-- This gives info on matrix testing.
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10

      # https://docs.github.com/en/actions/guides/building-and-testing-python#caching-dependencies
      # ^-- How to set up caching for pip on Ubuntu
      # https://github.com/marketplace/actions/cache
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # https://docs.github.com/en/actions/guides/building-and-testing-python#installing-dependencies
      # ^-- This gives info on installing dependencies with pip
      - name: Install Python Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

#       - name: Debugging information
#         run: |
#           echo "github.ref:" ${{github.ref}}
#           echo "github.event_name:" ${{github.event_name}}
#           echo "github.head_ref:" ${{github.head_ref}}
#           echo "github.base_ref:" ${{github.base_ref}}
#           git rev-parse --abbrev-ref HEAD
#           git branch
#           git branch -a
#           git remote -v

      # Sphinx Build html
      - name: Sphinx Build HTML
        run: |
          make html

      # Deploy on GitHub Pages
      # https://github.com/marketplace/actions/github-pages-action
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name == 'push' }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }} # A GitHub Actions runner automatically creates a GITHUB_TOKEN secret to use in your workflow.
          publish_dir: build/html
          force_orphan: true
   #       exclude_assets: '_sources/*'
          cname: pages.ksomov.ru

      # Deploy on host
      # https://github.com/marketplace/actions/ssh-remote-commands
      - name: Deploy on host
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          command_timeout: 30m
          script: |
            bash update.sh
